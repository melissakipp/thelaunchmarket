@use 'normalize' as *;
@use 'typography';
@use 'variables';

/* Apply the filter directly on the body tag */
body.dark-theme img {
  filter: brightness(0.8) contrast(1.2);
}

/* Or apply it via media query */
@media (prefers-color-scheme: dark) {
  img {
    filter: brightness(0.8) contrast(1.2);
  }
}

/* SVG icon */
body.dark-theme svg.icon path {
  fill: var(--white);
}

/* Font icon (using Font Awesome as an example) */
body.dark-theme .fa {
  color: #efefef;
}

*,
*::after,
*::before {
  border: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 100%;
}

html,
body {
  color: var(--foreground);
  background-color: var(--background);
  font-family: var(--font-family);
  font-weight: 400;
  line-height: 1.5;
  max-width: 100vw;
  overflow-x: hidden;
}

body::after[data-theme='dark'] {
  background-color: var(--background);
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  border: var(--btnBorder);
  border-radius: var(--radius);
  background-color: transparent;
  box-shadow: var(--boxShadow);
  cursor: pointer;
  font-weight: 700;
  margin: var(--margin);
  padding: 0;
  transition: all 0.2s ease-in-out;
  // padding: 0.75rem;
}

.smallLetterSpacing {
  letter-spacing: -0.15px;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

/* Accessibility */
.srOnly:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.toggle {
  cursor: pointer;
  height: 40px;
  width: 40px;
}

.toggle:is(:hover, :focus) {
  opacity: 0.8;
}

.containerToggles {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 1rem;
}

@media screen and (min-width: 1000px) {
  .main {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
    width: 90%;
    outline: 2px solid red;
  }
}